# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Test
on:
    push:
        branches: [ "master", "release/*" ]
    pull_request:
        branches: [ "master", "release/*" ]
jobs:
    build:
        runs-on: ubuntu-latest
        environment: test
        env:
            MYSQL_DATABASE: ${{ vars.mysql_database }}
            MYSQL_USER: ${{ vars.mysql_user }}
            MYSQL_PASSWORD: ${{ secrets.mysql_password }}
            MYSQL_ROOT_PASSWORD: ${{ secrets.mysql_root_password }}
            POSTGRES_USER: ${{ vars.postgres_user }}
            POSTGRES_PASSWORD: ${{ secrets.postgres_password }}
            POSTGRES_DB: ${{ vars.postgres_db }}
        steps:
            -   uses: actions/checkout@v3
                name: Set up Go
            -   uses: actions/setup-go@v4
                with:
                    go-version: '1.20'
            -   name: Build docker-compose containers
                run: docker-compose -f .github/ci/docker-compose.yml build --no-cache test_mysql test_postgres
            -   name: Start MySQL and Postgres containers
                run: docker-compose -f .github/ci/docker-compose.yml up -d --force-recreate --no-deps --build test_mysql test_postgres
            -   name: Install dependencies
                run: go mod tidy && go mod vendor
            -   name: Test
                run: go test -v ./...